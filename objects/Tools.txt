TEST_SUITE("Battle simulations") {

    auto multi_attack = [](int n, Team &attacker, Team &defender) {
        for (int i = 0; i < n; i++) {
            if (defender.stillAlive()) {
                attacker.attack(&defender);
            }
        }
    };

    TEST_CASE("Characters attack the closest enemy to the captain and ignore dead enemies ") {
        Team team{create_cowboy(-1, -1)};
        team.add(create_yninja(0, 0));
        team.add(create_oninja(-0.5, -0.5));
        team.add(create_tninja(0.5, 0.5));
        team.add(create_cowboy());

        CHECK_EQ(team.stillAlive(), 5);

        auto young_ninja = create_yninja(0, 0);
        auto trained_ninja = create_tninja(1, 1);
        auto old_ninja = create_oninja(2, 2);
        auto young_ninja2 = create_yninja(3, 3);
        auto cowboy = create_cowboy(-6, -6);
	auto cowboy2 = create_cowboy(-7, -7);
	auto cowboy3 = create_cowboy(-8, -8);
        Team team2{young_ninja};
        team2.add(trained_ninja);
        team2.add(old_ninja);
        team2.add(young_ninja2);
        team2.add(cowboy);
	team2.add(cowboy2);
	team2.add(cowboy3);

        CHECK_EQ(team2.stillAlive(), 7);

        cout << "1" << endl;

        multi_attack(2, team, team2);

        cout << "2" << endl;

        CHECK_FALSE(young_ninja->isAlive()); // Young ninja should be dead

        cout << "3" << endl;

        CHECK((trained_ninja->isAlive() && old_ninja->isAlive() &&
               young_ninja2->isAlive())); // Everyone else should still be alive


        cout << "4" << endl;


        team.attack(&team2);
        CHECK((!trained_ninja->isAlive() && old_ninja->isAlive() &&
               young_ninja2->isAlive())); // No one should die in the attack


        cout << "5" << endl;


        multi_attack(2, team, team2);
        CHECK_FALSE(trained_ninja->isAlive()); // Trained ninja should be dead
        CHECK((!old_ninja->isAlive() && young_ninja2->isAlive()));


        cout << "6" << endl;


        multi_attack(4, team, team2);
        CHECK_FALSE(old_ninja->isAlive()); // Old ninja should be dead
        CHECK(!young_ninja2->isAlive());


        cout << "7" << endl;


        multi_attack(2, team, team2);
        CHECK_NOTHROW(team.attack(
                &team2)); // The entire enemy team will be dead before every cowboy shoots, the attack should stop and not throw an exception

        cout << "8" << endl;


        CHECK_FALSE(young_ninja2->isAlive()); // Young ninja should be dead


        cout << "9" << endl;


        
        CHECK_THROWS_AS(team.attack(&team2), std::runtime_error); // Attacking a dead team should throw an exception
    }